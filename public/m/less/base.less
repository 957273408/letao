/* 定义变量 */

@main-color: #006699;
* {
    margin: 0px;
    padding: 0px;
}


/* 页面的文字都默认14px */

body {
    font-size: 0.14rem;
}


/* 把输入框的字体固定为14px */

input {
    font-size: 0.14rem;
}

li {
    list-style: none;
}

img {
    /* 解决图标3px的问题 */
    vertical-align: middle;
}


/* 因为MUI帮你写了样式初始化不需要写了 只要使用框架 都不需要写样式初始化 */


/* 第一张方案 加padding 给 main相对定位个固定高度 */

body {
    padding: 0.45rem 0;
    height: 100vh;
}

#main {
    /* 继承body内容的高度 */
    height: 100%;
    /* 给main设置相对定位 以为MUI区域滚动的容器设置了绝对定位 */
    position: relative;
}


/* 第二张方案 直接修改定位值 */


/* .mui-scroll-wrapper{
    top: 0.45rem;
    bottom: 0.45rem;
} */


/* 头部的公共样式 */

#header {
    background-color: @main-color;
    display: flex;
    /* 给父元素设置padding把内容往中间挤  2边如果有图标 使用定位 左边定位在左边 右边定位在右边 */
    padding-left: 0.45rem;
    padding-right: 0.45rem;
    width: 100vw;
    height: 0.45rem;
    color: #fff;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 999;
    h4 {
        margin: 0;
        width: 2.85rem;
        text-align: center;
        line-height: 0.45rem;
        font-weight: normal;
    }
    form {
        width: 100%;
        padding-top: 0.05rem;
        input {
            background-color: #fff;
            text-align: left;
            /* 注意默认有一个margin去掉 */
            margin-bottom: 0;
            font-size: 0.14rem;
        }
    }
    a {
        width: 0.45rem;
        height: 0.45rem;
        position: absolute;
        top: 0;
        text-align: center;
        line-height: 0.45rem;
        color: #fff;
        &:first-child {
            left: 0;
        }
        &:last-child {
            right: 0;
        }
    }
}


/* 底部的公共样式 */

#footer {
    width: 100vw;
    height: 0.45rem;
    background-color: @main-color;
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 999;
    ul {
        display: flex;
        li {
            width: 25vw;
            a {
                display: block;
                color: #fff;
                text-align: center;
                padding: 0.085rem;
                span {
                    display: block;
                }
            }
        }
    }
}


/* 搜索表单的公共样式 */


/* 搜索表单样式 */

.form-search {
    display: flex;
    padding: 10px;
    .input-search {
        flex: 1;
        height: 0.34rem;
        background-color: #fff;
        border: 1px solid @main-color;
        text-align: left;
        font-size: 0.14rem;
        margin-bottom: 0;
        /* border-top-right-radius:0;
            border-bottom-right-radius:0; */
        border-radius: 0.06rem 0 0 0.06rem;
    }
    .btn-search {
        width: 0.6rem;
        height: 0.34rem;
        background-color: @main-color;
        border-color: @main-color;
        /* border-top-left-radius:0;
            border-bottom-left-radius:0; */
        border-radius: 0 0.06rem 0.06rem 0;
    }
}


/* 商品列表的公共样式 */

.product-list {
    ul {
        display: flex;
        flex-wrap: wrap;
        li {
            width: 50%;
            padding: 0 5px;
            .product {
                margin-top: 10px;
                background-color: #fff;
                text-align: center;
                display: block;
                box-shadow: 0px 0px 2px hotpink;
                overflow: hidden;
                .product-img {
                    width: 100%;
                }
                .product-name {
                    /* 限制只显示2行文字超出隐藏 */
                    /* 改成弹性伸缩盒子模型 */
                    display: -webkit-box;
                    /* 伸缩盒子方向 垂直方向 */
                    -webkit-box-orient: vertical;
                    /* 设置文字显示的行数 */
                    -webkit-line-clamp: 3;
                    /* 超出部分隐藏 */
                    overflow: hidden;
                    /* 文本超出后显示... */
                    text-overflow: ellipsis;
                }
            }
        }
    }
}


/* 公共的遮罩层和加载中动画 */

.mask {
    position: fixed;
    width: 100vw;
    height: 100vh;
    background-color: #ccc;
    left: 0;
    top: 0;
    z-index: 990;
    display: none;
    img {
        position: absolute;
        width: 300px;
        height: 300px;
        border-radius:50%;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

.spinner {
    width: 1.0rem;
    height: 1.0rem;
    position: relative;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

.container1 > div,
.container2 > div,
.container3 > div {
    width: 0.2rem;
    height: 0.2rem;
    background-color: hotpink;
    border-radius: 100%;
    position: absolute;
    animation: bouncedelay 2s infinite ease-in-out;
    animation-fill-mode: both;
}

.spinner .spinner-container {
    position: absolute;
    width: 100%;
    height: 100%;
}

.container2 {
    transform: rotateZ(45deg);
}

.container3 {
    transform: rotateZ(90deg);
}

.circle1 {
    top: 0;
    left: 0;
}

.circle2 {
    top: 0;
    right: 0;
}

.circle3 {
    right: 0;
    bottom: 0;
}

.circle4 {
    left: 0;
    bottom: 0;
}

.container2 .circle1 {
    animation-delay: -2s;
}

.container3 .circle1 {
    animation-delay: -1.8s;
}

.container1 .circle2 {
    animation-delay: -1.6s;
}

.container2 .circle2 {
    animation-delay: -1.4s;
}

.container3 .circle2 {
    animation-delay: -1.2s;
}

.container1 .circle3 {
    animation-delay: -1.0s;
}

.container2 .circle3 {
    animation-delay: -0.8s;
}

.container3 .circle3 {
    animation-delay: -0.6s;
}

.container1 .circle4 {
    animation-delay: -0.4s;
}

.container2 .circle4 {
    animation-delay: -0.2s;
}

.container3 .circle4 {
    animation-delay: -0s;
}

@keyframes bouncedelay {
    0%,
    80%,
    100% {
        transform: scale(0.0);
    }
    40% {
        transform: scale(1.0);
    }
}
